{"version":3,"sources":["Todo.js","NewTodo.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","event","self","checking","target","parentNode","id","createRequest","XMLHttpRequest","onreadystatechange","readyState","status","setState","completed","open","setRequestHeader","send","JSON","stringify","state","react_default","a","createElement","className","onClick","remove","type","text","Component","NewTodo","onSubmit","addItem","placeholder","value","input","onChange","App","todos","alphabet","parse","responseText","preventDefault","val","toConsumableArray","concat","removing","remainingTodos","filter","todo","sort","b","localeCompare","_this2","src_NewTodo_0","map","src_Todo_0","key","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b84d4bcf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Todo.css';\n\nclass Todo extends Component {\n\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle(event) {\n    var self= this;\n    var checking = event.target.parentNode.id;\n    var val = {completed: true};\n    var createRequest = new XMLHttpRequest();\n    createRequest.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        // save new Todo to state\n        self.setState({completed: true});\n      }\n    }\n    createRequest.open(\"PUT\", \"https://cse204.work/todos/\" + checking, true);\n    createRequest.setRequestHeader(\"Content-type\", \"application/json\");\n    createRequest.setRequestHeader(\"x-api-key\", \"436e43-c10a11-0b4d66-aca258-8b38cb\");\n    createRequest.send(JSON.stringify(val));\n  }\n\n  render() {\n    var className = \"todo\";\n    this.state = {completed: this.props.completed};\n    if (this.state.completed) {\n      className = \"todo completed\";\n    }\n    return (\n      <div id= {this.props.id}>\n        <button className=\"btn\" onClick={this.props.remove}>X</button>\n        <input id= \"checkbox\" className=\"checkbox\" type=\"checkbox\" onClick={this.toggle}></input>\n        <p id=\"TheList\">{this.props.text} </p>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n","import React, { Component } from 'react';\nimport './NewTodo.css';\n\nclass NewTodo extends Component {\n  render() {\n    return (\n      <div id=\"todo\">\n        <form onSubmit={this.props.addItem}>\n          <input type=\"text\" id = \"entry-box\" placeholder=\"Enter ToDo Here\" value={this.props.input} onChange={this.props.onChange} />\n          <button id=\"submit\" className=\"submit\" type=\"submit\" onClick={this.props.addItem}>Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NewTodo;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport NewTodo from './NewTodo';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { todos: [], input: '' };\n    this.addItem = this.addItem.bind(this);\n    this.remove = this.remove.bind(this);\n    this.alphabet = this.alphabet.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    const self = this;\n    // AJAX goes here\n    var createRequest = new XMLHttpRequest();\n    createRequest.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        var todos = JSON.parse(this.responseText);\n        // If AJAX successful, pare the JSON and save to state\n        self.setState({ todos: todos });\n      }\n    };\n    createRequest.open(\"GET\", \"https://cse204.work/todos\", true);\n    createRequest.setRequestHeader(\"x-api-key\", \"436e43-c10a11-0b4d66-aca258-8b38cb\");\n    createRequest.send();\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    var self = this;\n    const newText = this.state.input;\n    var val = { text: newText };\n    var createRequest = new XMLHttpRequest();\n    createRequest.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        // save new Todo to state\n        self.setState({\n          todos: [...self.state.todos, JSON.parse(this.responseText)]\n        })\n        // clear the input field\n        self.setState({ input: '' });\n      }\n    };\n    createRequest.open(\"POST\", \"https://cse204.work/todos\", true);\n    createRequest.setRequestHeader(\"Content-type\", \"application/json\");\n    createRequest.setRequestHeader(\"x-api-key\", \"436e43-c10a11-0b4d66-aca258-8b38cb\");\n    createRequest.send(JSON.stringify(val));\n  }\n\n  remove(event) {\n    event.preventDefault();\n    var self = this;\n    var removing = event.target.parentNode.id;\n    var createRequest = new XMLHttpRequest();\n    createRequest.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        // You need the id of the todo you want to delete as a variable.\n        const remainingTodos = self.state.todos.filter((todo) => {\n          // Looping through all todos, if the id of the current todo DOES NOT equal the id of the todo we want to delete, keep it\n          if (todo.id !== removing) {\n            return todo;\n          }\n        });\n        // Update state with filtered list using this.setState();\n        self.setState({ todos: remainingTodos });\n      }\n    };\n    createRequest.open(\"DELETE\", \"https://cse204.work/todos/\" + removing, true);\n    createRequest.setRequestHeader(\"x-api-key\", \"436e43-c10a11-0b4d66-aca258-8b38cb\");\n    createRequest.send();\n  }\n\n  alphabet(event) {\n    var todos = this.state.todos;\n    todos.sort(function (a, b) {\n      return a.text.localeCompare(b.text);\n    });\n    this.setState({ todos: todos })\n  }\n\n  onChange(event) {\n    // Set the state to the value of the input\n    this.setState({\n      input: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <h1>Carter's ToDo App</h1>\n        <NewTodo addItem={this.addItem} onChange={this.onChange} input={this.state.input} />\n        <button id = \"sort\" className=\"sort\" onClick={this.alphabet}>Sort</button>\n        {this.state.todos.map((todo) =>\n          <Todo key={todo.id} id={todo.id} completed={todo.completed}\n            text={todo.text} remove={this.remove} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}